package main

import (
	"fmt"
	"sync"
)

func main() {
	wg := new(sync.WaitGroup)
	// создаем буферизированный канал, чтобы не блокировать основной поток
	chn := make(chan int, 1)
	// передаем начальное значение в канал
	chn <- 0
	for i := 0; i < 1000; i++ {
		// Запускаем 1000 экземпляров горутины, увеличивающей счетчик на 1
		wg.Add(1)
		go func(wg *sync.WaitGroup) {
			defer wg.Done()
			// Забираем значение из канала, инкрементируем его и отправляем обратно в тот же канал
			chn <- <-chn + 1
		}(wg)
	}

	wg.Wait()

	// Достаем конечное значение из канала
	fmt.Println(<-chn)
}
