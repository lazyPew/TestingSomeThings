package main

import (
	"fmt"
	"time"
)

/*
	На стандартный ввод подается 10 целых чисел,
	разделенных пробелами (числа могут повторяться).
	Вам необходимо вычислить результат выполнения функции
	work для каждого из полученных чисел.
	Функция work имеет следующий вид:
		func work(x int) int
	Результаты вычислений , разделенные пробелами,
	должны быть напечатаны в строку.

	Однако работа функции work занимает слишком много времени.
	Выделенного вам времени выполнения не хватит на последовательную
	обработку каждого числа, поэтому необходимо реализовать кэширование
	уже готовых результатов и использовать их в работе.
	После завершения работы программы результат выполнения
	будет дополнен информацией о соблюдении установленного
	лимита времени выполнения.

	Sample Input:
	3 1 5 2 3 5 3 0 3 4

	Sample Output:
	2 0 6 1 2 6 2 -1 2 5 time limit ok

*/

func work(x int) int {
	time.Sleep(time.Second)
	if x >= 4 {
		return x + 1
	} else {
		return x - 1
	}
}

func main() {
	m := make(map[int]int)
	var valScan int
	for count := 0; count < 10; count++ {
		fmt.Scan(&valScan)
		if _, ok := m[valScan]; ok {
			fmt.Print(m[valScan], " ")
		} else {
			m[valScan] = work(valScan)
			fmt.Print(m[valScan], " ")
		}
	}
}
